#!/bin/bash

! cd "$(dirname "$0")" && echo "Could not cd to script directory" && exit 1

ME=$(basename "$0")

! ./stop-rnode && exit $?

[ -d ~/.rnode ] && echo "
$ME: $HOME/.rnode exists. Use 'rm -rf $HOME/.rnode' to fix.
" && while read -r -p "$ME: Execute 'rm -rf $HOME/.rnode' [y]? " response;do
	if [ "$response" == "y" ] || [ -z "$response" ];then
		rm -rf "$HOME"/.rnode
		break
	else
		echo "$ME: Aborting $ME"
		exit 1
	fi
done

mkdir -p snapshot log generated 2>/dev/null

./list-snapshot |grep "$ME" >/dev/null 2>&1 && echo "
$ME snapshot exists.
" && while read -r -p "Use snapshot instead of re-running $ME [y]? " response;do
	if [ "$response" == "y" ] || [ -z "$response" ];then
		./restore-snapshot "$ME"
		exit 0
	else
		echo "Rerunning $ME"
		break
	fi
done

LOGFILE="log/$ME.log"

private_key=$(cat PrivateKeys/pk.bootstrap)

mkdir -p ~/.rnode || exit 3
tar cf - genesis|(cd ~/.rnode; tar xvf -) || exit 3

rm -f /tmp/bootstrap.fifo
mkfifo /tmp/bootstrap.fifo

stdbuf -oL -eL rnode run -s \
	--validator-private-key "$private_key" \
	--dev-mode \
	-XX:MaxDirectMemorySize=100m -XX:MaxRAMPercentage=25 \
	> /tmp/bootstrap.fifo 2>&1 &

PID=$!

while true;do
	if read -r line < /tmp/bootstrap.fifo;then
		if echo "$line"|grep 'Making a transition to Running state.';then
			break
		fi
		echo "$ME: $line"
	else
		sleep 1
	fi
done | tee "$LOGFILE"

rm -f /tmp/bootstrap.fifo

echo "$ME: Stopping $ME rnode process"
sleep 3 && kill "$PID"

wait "$PID"

echo "$ME: Creating snapshot '$ME'"
./create-snapshot "$ME"

stty echo || exit 0
