match [""] {
[channel] => {
new
   trace,
   lookupCh,
   bCh,
   ch1,
   ret,
   listener,
   isEndCh,
   lookup(`rho:registry:lookup`),
   return(`rho:rchain:deployId`),
   deployerId(`rho:rchain:deployerId`) in {
      for (@{"read": *MCA, ..._} <<- @[*deployerId, "dictionary"]) {
         return!(["MCA", *MCA]) |
         MCA!("Chat", *lookupCh)
      } |
      contract myListener(value, ret) = {
         stdout!(*value ++ " listener")|
         log!(*value, *ack ) |
         for ( _ <- ack ) {
         ret!(Nil)
         }
      } |
      for(Chat <- lookupCh) {
         return!(["Chat", *Chat]) |
         Chat!(*bCh) |
         for(pub, sub <- bCh) {
            for (@{"inbox": *inbox, "URI": uri ..._} <<- @[*deployerId, "inbox"]) {
               return!(["chatAdmin", channel, { "pub": *pub, "sub": *sub }]) |
               inbox!(["chatAdmin", channel, {"pub": *pub, "sub": *sub }], *return) |
               sub!(*myListener, *isEndCh) |
               for ( isEnd <- isEndCh) {
                  inbox!(["chat", channel, {"listener": *myListener, "isEnd": *isEnd }], *return)
               }
            }
         }
      }
   }
}