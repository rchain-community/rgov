new 
  cliChannel,
  Kudos,
  deployId,
  insertArbitrary(`rho:registry:insertArbitrary`),
  stdout(`rho:io:stdout`),
  state, regCh
in {
  insertArbitrary!(*Kudos, *regCh) | for (@uri <- regCh) {
    stdout!(["#define $Kudos", uri]) |
    cliChannel!(["#define", "Kudos", uri]) |
    deployId!(["#define", "Kudos", uri])
  }
  |
  contract Kudos(@"peek", return) = { for (@current <<- state) { return!(current) } }
  |
  contract Kudos(@"award", @them /\ String, return) = {
    for(@old <- state) {
      match {old.set(them, old.getOrElse(them, 0) + 1)} {
        current => {
          state!(current) |
          return!(current)
        }
      }
    }
  }
  |
  state!({})
}
